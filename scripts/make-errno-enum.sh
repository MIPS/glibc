#! /bin/sh
# Script to produce bits/error_t.h.

# Copyright (C) 2017 Free Software Foundation, Inc.
# This file is part of the GNU C Library.

# The GNU C Library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# The GNU C Library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with the GNU C Library; if not, see
# <http://www.gnu.org/licenses/>.

# This script is invoked with no input.
# AWK and CC are expected to be set in the environment.
# "$@" is expected to be a sequence of -I switches to pass to the compiler.
# The generated error_t.h is written to stdout.

set -e

# Note: the steps below that may fail under normal circumstances are
# carefully arranged to be at the ends of pipelines.
tmp1=`mktemp -t me1.XXXXXXXXX`
tmp2=`mktemp -t me2.XXXXXXXXX`
trap "rm -f '$tmp1' '$tmp2'" 0

printf '#include <features.h>\n#include <bits/errno.h>\n' |
    "$CC" -E -dM -xc -D_GNU_SOURCE -D_ERRNO_H "$@" - > "$tmp1"

LC_ALL=C sort < "$tmp1" | "$AWK" > "$tmp2" '
  /^#define E[A-Z0-9]/ {
    name = $2;
    printf("\n#ifdef %s\n# pragma push_macro (\"%s\")\n# undef %s\n  %s =\n",
           name, name, name, name);
    printf("# pragma pop_macro (\"%s\")\n    %s,\n#endif\n",
           name, name);
  }
'

echo '/* Errno codes as enum constants.'
echo '   This file was generated by make-errno-enum.sh from bits/errno.h.  */'
echo
echo '#ifndef _BITS_ERRNO_ENUM_H'
echo '#define _BITS_ERRNO_ENUM_H 1'
echo
echo '#include <bits/errno.h>'
echo
echo 'enum __error_t_codes'
echo '{'
echo '  /* Force the enum to be a signed type.  */'
echo '  __FORCE_ERROR_T_CODES_SIGNED = -1,'
echo
echo '  /* Zero indicates success.  Including this entry may prevent'
echo '     warnings from some compilers if "case 0" appears in a switch'
echo '     statement over an error_t value.  */'
echo '  ESUCCESS = 0,'
cat "$tmp2"
echo '};'
echo
echo '#endif /* bits/errno-enum.h */'
