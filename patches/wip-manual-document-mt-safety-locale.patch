Bottom: 433caedec169e879059fe6a497b2a6f420d94334
Top:    e5495b72159bea83c172508270804cf16b3f60ec
Author: Alexandre Oliva <aoliva@redhat.com>
Date:   2013-08-17 01:25:08 -0300

Thread safety documentation.

for  ChangeLog

	* manual/locale.texi: Document thread safety properties.


---

diff --git a/manual/locale.texi b/manual/locale.texi
index 2f10fcd..f07135e 100644
--- a/manual/locale.texi
+++ b/manual/locale.texi
@@ -224,6 +224,137 @@ The symbols in this section are defined in the header file @file{locale.h}.
 @comment locale.h
 @comment ISO
 @deftypefun {char *} setlocale (int @var{category}, const char *@var{locale})
+@safety{@mtunsafe{uunguard, envromt}@asunsafe{oncesafe, selfdeadlock, asmalloc, asynconsist, incansist}@acunsafe{oncesafe, incansist, lockleak, memleak, fdleak}}
+@c Uses of the global locale object are unguarded in functions that
+@c ought to be MT-Safe, so we're ruling out the use of this function
+@c once threads are started.  It takes a write lock itself, but it may
+@c return a pointer loaded from the global locale object after releasing
+@c the lock, or before taking it.
+@c This function returns a pointer read...
+@c setlocale envromt, oncesafe, asmalloc, selfdeadlock, asynconsist, incansist, memleak, fdleak, lockleak
+@c  libc_rwlock_wrlock selfdeadlock, lockleak
+@c  libc_rwlock_unlock lockleak
+@c  getenv LOCPATH envromt
+@c  malloc asmalloc, memleak
+@c  free asmalloc, memleak
+@c  new_composite_name ok
+@c  setdata ok
+@c  setname ok
+@c  _nl_find_locale envromt, oncesafe, asmalloc, selfdeadlock, asynconsist, incansist, memleak, fdleak, lockleak
+@c   getenv LC_ALL and LANG envromt
+@c   _nl_load_locale_from_archive asmalloc, memleak, fdleak
+@c    sysconf _SC_PAGE_SIZE ok
+@c    _nl_normalize_codeset asmalloc, memleak
+@c     isalnum_l ok (C locale)
+@c     isdigit_l ok (C locale)
+@c     malloc asmalloc, memleak
+@c     tolower_l ok (C locale)
+@c    open_not_cancel_2 fdleak
+@c    fxstat64 ok
+@c    close_not_cancel_no_status ok
+@c    __mmap64 memleak
+@c    calculate_head_size ok
+@c    __munmap ok
+@c    compute_hashval ok
+@c    qsort dup asmalloc, memleak
+@c     rangecmp ok
+@c    malloc asmalloc, memleak
+@c    strdup asmalloc, memleak
+@c    _nl_intern_locale_data asmalloc, memleak
+@c     malloc asmalloc, memleak
+@c     free asmalloc, memleak
+@c   _nl_expand_alias asmalloc, selfdeadlock, memleak, fdleak, lockleak
+@c    libc_lock_lock selfdeadlock, lockleak
+@c    bsearch ok
+@c     alias_compare ok
+@c      strcasecmp ok
+@c    read_alias_file asmalloc, selfdeadlock, memleak, fdleak, lockleak
+@c     fopen asmalloc, selfdeadlock, memleak, fdleak, lockleak
+@c     fsetlocking ok
+@c     feof_unlocked ok
+@c     fgets_unlocked ok
+@c     isspace ok (locale mutex is locked)
+@c     extend_alias_table memleak, asmalloc
+@c      realloc memleak, asmalloc
+@c     realloc memleak, asmalloc
+@c     fclose asmalloc, selfdeadlock, memleak, fdleak, lockleak
+@c     qsort asmalloc, memleak
+@c      alias_compare dup
+@c    libc_lock_unlock lockleak
+@c   _nl_explode_name asmalloc, memleak
+@c    _nl_find_language ok
+@c    _nl_normalize_codeset dup asmalloc, memleak
+@c   _nl_make_l10nflist asmalloc, memleak
+@c    malloc asmalloc, memleak
+@c    free asmalloc, memleak
+@c    __argz_stringify ok
+@c    __argz_count ok
+@c    __argz_next ok
+@c   _nl_load_locale asmalloc, memleak, fdleak
+@c    open_not_cancel_2 fdleak
+@c    __fxstat64 ok
+@c    close_not_cancel_no_status ok
+@c    mmap memleak
+@c    malloc asmalloc, memleak
+@c    read_not_cancel ok
+@c    free asmalloc, memleak
+@c    _nl_intern_locale_data dup asmalloc, memleak
+@c    munmap ok
+@c   __gconv_compare_alias oncesafe, asmalloc, asynconsist, selfdeadlock, memleak,incansist, fdleak, lockleak
+@c    __gconv_read_conf oncesafe, asmalloc, asynconsist, selfdeadlock, memleak,incansist, fdleak, lockleak
+@c     (libc_once-initializes gconv_cache and gconv_path_envvar; they're
+@c      never modified afterwards)
+@c     __gconv_load_cache asmalloc, memleak, fdleak
+@c      getenv GCONV_PATH envromt
+@c      open_not_cancel fdleak
+@c      __fxstat64 ok
+@c      close_not_cancel_no_status ok
+@c      mmap memleak
+@c      malloc asmalloc, memleak
+@c      __read ok
+@c      free asmalloc, memleak
+@c      munmap ok
+@c     __gconv_get_path selfdeadlock, asmalloc, lockleak, memleak, fdleak
+@c      getcwd asmalloc, memleak, fdleak
+@c      libc_lock_lock selfdeadlock, lockleak
+@c      malloc asmalloc, memleak
+@c      strtok_r ok
+@c      libc_lock_unlock lockleak
+@c     read_conf_file asmalloc, asynconsist, selfdeadlock, memleak, incansist, fdleak, lockleak
+@c      fopen asmalloc, selfdeadlock, memleak, fdleak, lockleak
+@c      fsetlocking ok
+@c      feof_unlocked ok
+@c      getdelim asmalloc, asynconsist, memleak, incansist
+@c      isspace_l ok (C locale)
+@c      add_alias
+@c       isspace_l ok (C locale)
+@c       toupper_l ok (C locale)
+@c       add_alias2 dup asynconsist, asmalloc, incansist, memleak
+@c      add_module asmalloc, memleak
+@c       isspace_l ok (C locale)
+@c       toupper_l ok (C locale)
+@c       strtol ok (glocale, but we hold the locale lock)
+@c       tfind __gconv_alias_db ok
+@c        __gconv_alias_compare dup ok
+@c       calloc asmalloc, memleak
+@c       insert_module dup asmalloc
+@c     __tfind ok (because the tree is read only by then)
+@c      __gconv_alias_compare dup ok
+@c     insert_module asmalloc
+@c      free asmalloc
+@c     add_alias2 asynconsist, asmalloc, incansist, memleak
+@c      detect_conflict ok, reads __gconv_modules_db
+@c      malloc asmalloc, memleak
+@c      tsearch __gconv_alias_db asynconsist, asmalloc, incansist, memleak
+@c       __gconv_alias_compare ok
+@c      free asmalloc
+@c    __gconv_compare_alias_cache ok
+@c     find_module_idx ok
+@c    do_lookup_alias ok
+@c     __tfind ok (because the tree is read only by then)
+@c      __gconv_alias_compare ok
+@c   strndup asmalloc, memleak
+@c   strcasecmp_l ok (C locale)
 The function @code{setlocale} sets the current locale for category
 @var{category} to @var{locale}.  A list of all the locales the system
 provides can be created by running
