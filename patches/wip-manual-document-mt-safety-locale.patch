Bottom: 2fa9c7496d316b6dac213c6948024196e3a9ec7a
Top:    057edc20976415995ffe1c7466b372eee5307111
Author: Alexandre Oliva <aoliva@redhat.com>
Date:   2013-08-17 01:25:08 -0300

Thread safety documentation.

for  ChangeLog

	* manual/locale.texi: Document thread safety properties.


---

diff --git a/manual/locale.texi b/manual/locale.texi
index 2f10fcd..fb6de4e 100644
--- a/manual/locale.texi
+++ b/manual/locale.texi
@@ -224,6 +224,49 @@ The symbols in this section are defined in the header file @file{locale.h}.
 @comment locale.h
 @comment ISO
 @deftypefun {char *} setlocale (int @var{category}, const char *@var{locale})
+@safety{@mtunsafe{uunguard, envromt}@asunsafe{selfdeadlock, asmalloc}@acunsafe{lockleak, memleak}}
+@c Uses of the global locale object are unguarded in functions that
+@c ought to be MT-Safe, so we're ruling out the use of this function
+@c once threads are started.  It takes a write lock itself, but it may
+@c return a pointer loaded from the global locale object after releasing
+@c the lock, or before taking it.
+@c This function returns a pointer read...
+@c setlocale
+@c  libc_rwlock_wrlock selfdeadlock, lockleak
+@c  libc_rwlock_unlock lockleak
+@c  getenv LOCPATH envromt
+@c  malloc asmalloc, memleak
+@c  free asmalloc, memleak
+@c  new_composite_name ok
+@c  setdata ok
+@c  setname ok
+@c  _nl_find_locale
+@c   getenv LC_ALL and LANG envromt
+@c   _nl_load_locale_from_archive
+@c   _nl_expand_alias asmalloc, selfdeadlock, memleak, fdleak, lockleak
+@c    libc_lock_lock selfdeadlock, lockleak
+@c    bsearch ok
+@c     alias_compare ok
+@c      strcasecmp ok
+@c    read_alias_file asmalloc, selfdeadlock, memleak, fdleak, lockleak
+@c     fopen asmalloc, selfdeadlock, memleak, fdleak, lockleak
+@c     fsetlocking ok
+@c     feof_unlocked ok
+@c     fgets_unlocked ok
+@c     isspace ok (locale mutex is locked)
+@c     extend_alias_table memleak, asmalloc
+@c      realloc memleak, asmalloc
+@c     realloc memleak, asmalloc
+@c     fclose asmalloc, selfdeadlock, memleak, fdleak, lockleak
+@c     qsort asmalloc, memleak
+@c      alias_compare dup
+@c    libc_lock_unlock lockleak
+@c   _nl_explode_name
+@c   _nl_make_l10nflist
+@c   _nl_load_locale
+@c   __gconv_compare_alias
+@c   strndup asmalloc, memleak
+@c   strcasecmp_l ok (C locale)
 The function @code{setlocale} sets the current locale for category
 @var{category} to @var{locale}.  A list of all the locales the system
 provides can be created by running
